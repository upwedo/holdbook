<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:p="http://www.springframework.org/schema/p"
     xmlns:context="http://www.springframework.org/schema/context"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context-3.2.xsd
     http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	<context:annotation-config></context:annotation-config>
	<context:component-scan base-package="com.hold.book.action,
	    com.hold.book.dao.impl,com.hold.book.service.impl,
	    com.hold.book.quartz,com.hold.book.mail,com.hold.book.excel,
	    com.hold.book.divide,com.hold.book.service.calculate,
	    com.hold.book.crawer,com.hold.book.check"/>

	<bean id="dataSource" destroy-method="close" class="com.mchange.v2.c3p0.ComboPooledDataSource">
	  <property name="driverClass" value="com.mysql.jdbc.Driver"/>
	  <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/holdbook"/>
	  <property name="user" value="root"/>
	  <property name="password" value="123456"/>

   <!--连接池中保留的最小连接数。 -->

		<property name="minPoolSize">
			<value>5</value>
		</property>

		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize">
			<value>300</value>
		</property>

		<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize">
			<value>50</value>
		</property>

		<!--最大空闲时间,600秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime">
			<value>600</value>
		</property>

		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement">
			<value>5</value>
		</property>

		<!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements 属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。 
			如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
		<property name="maxStatements">
			<value>0</value>
		</property>

		<!--连接池用完时客户调用getConnection()后等待获取连接的时间，单位：毫秒。超时后会抛出-->
 		<!--SQLEXCEPTION，如果设置0，则无限等待。Default:0-->
 		<property name="checkoutTimeout" value="100"/>
 
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod">
			<value>60</value>
		</property>

		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
		<property name="acquireRetryAttempts">
			<value>30</value>
		</property>

		<!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效 保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试 
			获取连接失败后该数据源将申明已断开并永久关闭。Default: false -->
		<property name="breakAfterAcquireFailure">
			<value>false</value>
		</property>

		<!--因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的 时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable 
			等方法来提升连接测试的性能。Default: false -->
		<property name="testConnectionOnCheckout">
			<value>false</value>
		</property>
		
		<property name="testConnectionOnCheckin">
			<value>false</value>
		</property>
		
		<property name="automaticTestTable">
			<value>C3P0TestTable</value>
		</property>
		
	</bean>
	
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
    	<property name="configLocation">
    		<value>classpath:hibernate.cfg.xml</value>
    	</property> 
    	<property name="dataSource" ref="dataSource"></property>
    	
    	<!-- 扫面实体类 
    	<property name="mappingDirectoryLocations">
    	    <list>
    	        <value>classpath:com/kai/survey/model</value>
    	    </list>
    	</property>-->
  </bean>
	
	<bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	
	<aop:config>
	    <!-- 事务切入点配置 -->
		<aop:pointcut expression="execution(public * com.hold.book.service..*.*(..))" id="bussinessService"/>		
		<aop:advisor advice-ref="txAdvice" pointcut-ref="bussinessService"/>
		
	</aop:config>
	
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" isolation="DEFAULT"/>
			<tx:method name="update*" propagation="REQUIRED" isolation="DEFAULT"/>
			<tx:method name="delete*" propagation="REQUIRED" isolation="DEFAULT"/>
			<tx:method name="batch*" propagation="REQUIRED" isolation="DEFAULT"/>
			<tx:method name="new*" propagation="REQUIRED" isolation="DEFAULT"/>
			
			<tx:method name="get*" propagation="REQUIRED" isolation="DEFAULT" read-only="true"/>
			<tx:method name="load*" propagation="REQUIRED" isolation="DEFAULT" read-only="true"/>
			<tx:method name="find*" propagation="REQUIRED" isolation="DEFAULT" read-only="true"/>
			
			<tx:method name="*" propagation="REQUIRED" isolation="DEFAULT"/>
		</tx:attributes>
	</tx:advice>
	
	<bean id="taskExecutor"   
        class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">  
                <property name="corePoolSize" value="5" />  
                <property name="maxPoolSize" value="10" />  
                <property name="WaitForTasksToCompleteOnShutdown" value="true" />  
    </bean>
	
	<!--  
      <aop:aspectj-autoproxy proxy-target-class="true"/>  
	-->
</beans>
